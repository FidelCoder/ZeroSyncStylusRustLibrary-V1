name: ZeroSync CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy
      
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release
      
      - name: Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: -- -D warnings
      
      - name: Format Check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  benchmark:
    name: Run Benchmarks
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      
      - name: Run Benchmarks
        uses: actions-rs/cargo@v1
        with:
          command: bench
      
      - name: Archive benchmark results
        uses: actions/upload-artifact@v3
        with:
          name: benchmark-results
          path: target/criterion/

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      
      - name: Install cargo-tarpaulin
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-tarpaulin
          version: latest
          use-tool-cache: true
      
      - name: Generate Coverage Report
        uses: actions-rs/cargo@v1
        with:
          command: tarpaulin
          args: --out Xml
      
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  # Simulate Stylus environment for benchmarking
  stylus-bench:
    name: Stylus Environment Simulation
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      
      - name: Run Stylus-specific benchmarks
        uses: actions-rs/cargo@v1
        with:
          command: bench
          args: -- --verbose stylus
      
      - name: Archive Stylus benchmark results
        uses: actions/upload-artifact@v3
        with:
          name: stylus-benchmark-results
          path: target/criterion/ 